# Техническое задание для разработки приложения ParamControl на C++/Qt5

## 1. Общее описание

### 1.1 Назначение
Приложение ParamControl предназначено для мониторинга телеметрических параметров космических аппаратов (КА) через систему СОТМ. Оно обеспечивает непрерывный контроль заданных параметров, оповещает операторов при выходе значений за установленные пределы и ведет журнал событий.

### 1.2 Платформа и технологии
- Язык программирования: C++17
- Фреймворк GUI: Qt5
- Система: Astra Linux
- Сетевое взаимодействие: TCP/IP
- Формат обмена данными: XML

## 2. Функциональные требования

### 2.1 Основные функции

#### 2.1.1 Мониторинг параметров
- Периодический опрос СОТМ для получения текущих значений параметров
- Проверка соответствия полученных значений заданным условиям
- Визуальная индикация состояния параметров
- Звуковая сигнализация при нарушении условий
- Ведение журнала событий
- Эвристическое определение сбойной ТМИ по аномальным изменениям параметра СЕК
- Визуальная индикация работоспособности системы через изменение цвета параметра СЕК

#### 2.1.2 Управление параметрами
- Добавление параметров на контроль
- Удаление параметров с контроля
- Редактирование условий контроля параметров
- Включение/отключение звуковой сигнализации для отдельных параметров
- Возможность изменения параметров "на лету" без остановки мониторинга
- Поддержка нескольких различных условий контроля для одного параметра
- Возможность добавления подробного текстового описания к параметрам
- Просмотр детальной "карточки параметра" с описанием, документацией и историей

#### 2.1.3 Настройка подключения
- Указание IP-адреса и порта СОТМ
- Выбор номера КА и ЗС
- Настройка интервала опроса
- Настройка таймаутов соединения

#### 2.1.4 Управление звуковыми оповещениями
- Назначение звуковых файлов для разных типов событий
- Включение/отключение звуковой сигнализации
- Визуальная индикация отключенной звуковой сигнализации ТМИ (красная кнопка)

#### 2.1.5 Ведение журнала
- Запись событий в текстовый файл
- Просмотр журнала с возможностью фильтрации
- Очистка журнала
- Цветовая индикация: красным для ошибок, зеленым для возврата параметров в норму

#### 2.1.6 Централизованное обновление
- Проверка наличия обновлений на сетевом ресурсе
- Автоматическая установка обновлений
- Возможность ручного запуска обновления
- Настройка периодичности проверки обновлений

### 2.2 Типы проверяемых условий для параметров

#### 2.2.1 Равенство (Equals)
Параметр должен быть равен заданному значению.

#### 2.2.2 Неравенство (NotEquals)
Параметр не должен быть равен заданному значению.

#### 2.2.3 В пределах диапазона (InLimits)
Значение параметра должно быть в пределах заданного диапазона (от минимального до максимального значения).

#### 2.2.4 Вне диапазона (OutOfLimits)
Значение параметра должно быть вне заданного диапазона.

#### 2.2.5 Изменение (Changed)
Фиксация каждого изменения значения параметра.

## 3. Пользовательский интерфейс

### 3.1 Общие требования к интерфейсу
- Современный, интуитивно понятный интерфейс
- Четкое разделение функциональных блоков
- Цветовое кодирование для визуальной индикации состояний
- Компактное размещение элементов управления
- Возможность быстрого визуального восприятия критической информации

### 3.2 Главное окно
- Двухпанельный интерфейс: таблица параметров и журнал событий
- Верхняя панель со статусными индикаторами (СОТМ, КА, ЗС, ТМИ)
- Индикатор СЕК с изменяемым цветом фона для визуального контроля работы
- Единая кнопка Старт/Стоп с переключаемым состоянием
- Кнопка отключения звука ТМИ с цветовой индикацией (красная при отключенном звуке)
- Компактная кнопка доступа к настройкам

### 3.3 Таблица параметров
- Столбцы: Звук (статус), Параметр, Условие контроля
- Поддержка группировки нескольких условий контроля для одного параметра
- Цветовая индикация состояния параметров
- Контекстное меню для управления параметрами

### 3.4 Журнал событий
- Столбцы: Дата/время, Параметр, Значение
- Цветовая индикация событий: красный для ошибок, зеленый для возврата в норму
- Возможность очистки и фильтрации журнала

### 3.5 Диалоги

#### 3.5.1 Диалог настроек
- Табулированный интерфейс с вкладками:
  - Соединение (настройки подключения к СОТМ)
  - Звуки (настройка звуковых оповещений)
  - КА и ЗС (выбор космического аппарата и земной станции)
  - Обновления (настройки централизованного обновления)

#### 3.5.2 Диалог добавления/редактирования параметра
- Поле для ввода имени параметра
- Выбор метода контроля (радиокнопки)
- Поля для ввода значений в зависимости от выбранного метода
- Поле для ввода расширенного описания параметра
- Настройка звукового оповещения

#### 3.5.3 Карточка параметра
- Отображение имени параметра
- Подробное описание параметра
- Таблица всех условий контроля и их текущего статуса
- Информация о текущем значении и истории изменений

## 4. Архитектура приложения

### 4.1 Модули

#### 4.1.1 Ядро (Core)
- Классы параметров (Parameter и производные классы)
- Модель данных параметров (ParameterModel)
- Клиент для взаимодействия с СОТМ (SotmClient)
- Сервис мониторинга (MonitoringService)
- Менеджер оповещений (AlertManager)
- Парсер XML (XmlParser)
- Менеджер журналирования (LogManager)
- Менеджер обновлений (UpdateManager)
- Анализатор телеметрии (TmiAnalyzer)

#### 4.1.2 Пользовательский интерфейс (UI)
- Главное окно (MainWindow)
- Диалоги для работы с параметрами (ParameterDialog)
- Диалоги для настройки подключения (ConnectionDialog)
- Диалоги для выбора КА и ЗС (KaZsDialog)
- Диалог просмотра журнала (LogDialog)
- Диалог настроек (SettingsDialog)
- Окно карточки параметра (ParameterCardView)
- Модели для таблиц (ParameterTableModel, LogTableModel)

### 4.2 Основные классы и их ответственности

#### 4.2.1 Parameter
Базовый абстрактный класс для представления параметра и его условий проверки.

#### 4.2.2 ParameterModel
Модель данных, хранящая список параметров и обеспечивающая операции добавления, удаления и редактирования.

#### 4.2.3 SotmClient
Класс для сетевого взаимодействия с СОТМ, обеспечивающий формирование запросов и обработку ответов.

#### 4.2.4 XmlParser
Класс для создания XML-запросов и парсинга XML-ответов от СОТМ.

#### 4.2.5 MonitoringService
Центральный сервис, координирующий процесс мониторинга, запрашивающий данные от СОТМ и проверяющий параметры.

#### 4.2.6 AlertManager
Менеджер звуковых оповещений для различных типов событий.

#### 4.2.7 LogManager
Менеджер журналирования событий, записывающий их в текстовый файл и предоставляющий доступ к истории событий.

#### 4.2.8 MainWindow
Главное окно приложения, содержащее управляющие элементы и таблицы параметров и событий.

#### 4.2.9 TmiAnalyzer
Класс для анализа телеметрии и обнаружения аномалий в значениях параметра СЕК.

#### 4.2.10 UpdateManager
Класс для управления обновлениями приложения, проверки наличия новых версий и их установки.

## 5. Протокол взаимодействия с СОТМ

### 5.1 Формат запроса
```xml
<?xml version="1.0"?>
<SotmDialog BodyType="Query">
  <Ka>номер_КА</Ka>
  <Nip>номер_ЗС_первая_цифра</Nip>
  <Kts>номер_ЗС_две_последние_цифры</Kts>
  <Params ValueType="Last" Interval="интервал_обновления" FindNameBehaviour="1">
    <Item Index="имя_параметра_1"/>
    <Item Index="имя_параметра_2"/>
    ...
    <Item Index="имя_параметра_N"/>
  </Params>
</SotmDialog>
```

### 5.2 Формат ответа
```xml
<?xml version="1.0"?>
<SotmDialog BodyType="Answer">
  <Params>
    <Item Index="имя_параметра_1">
      <Value>значение_1</Value>
    </Item>
    <Item Index="имя_параметра_2">
      <Value>значение_2</Value>
    </Item>
    ...
    <Item Index="имя_параметра_N">
      <Value>значение_N</Value>
    </Item>
  </Params>
</SotmDialog>
```

### 5.3 Особенности протокола
- Запрос и ответ передаются через TCP-сокет
- Перед XML-данными идет заголовок фиксированной длины 25 байт
- Заголовок содержит директиву, номер КА, тип информации и длину прикладного пакета
- Константы протокола:
  - DIRECTORY_NUMBER = 158
  - INFORMATION_TYPE = 1888
  - HEADER_LENGTH = 25

## 6. Формат хранения данных

### 6.1 Параметры
Параметры хранятся в файлах JSON с комментариями в начале, пример:
```json
# Configuration file for ParamControl
# Fields:
#   - name: Parameter name
#   - type: Parameter type (0 = Equals, 1 = NotEquals, 2 = InLimits, 3 = OutOfLimits, 4 = Changed)
#   - target_value: Target value for comparison (string or array of strings)
#   - sound_enabled: Whether sound alert is enabled (true/false)
#   - sound_file: Path to sound file for alert
#   - description: Human-readable description of parameter

{
  "version": "1.0",
  "timestamp": "2025-04-01T12:30:45",
  "parameters": [
    {
      "name": "СЕК",
      "type": 4,
      "sound_enabled": true,
      "sound_file": "./sounds/beep.wav",
      "description": "Изменение значения"
    },
    // Другие параметры...
  ]
}
```

### 6.2 Настройки приложения
Настройки хранятся в INI-файле, пример:
```ini
[General]
# Общие настройки приложения
version=1.0
mainWindowGeometry=...

[sotm]
# Настройки подключения к СОТМ
ipAddress=192.168.1.100
port=1234
kaNumber=101
zsNumber=123
responseTimeoutMs=5000

[sounds]
# Настройки звуковых оповещений
noTmiSound=./sounds/notmi.wav
defaultAlertSound=./sounds/alert.wav

[updates]
# Настройки обновлений
updateServer=\\server\share\updates
checkAtStartup=true
autoInstall=false
```

### 6.3 Журнал событий
Журнал хранится в текстовом файле с комментариями в начале, пример:
```
# Журнал событий ParamControl для КА 101
# Формат: Дата Время | Параметр | Значение | Статус

2025-04-01 09:30:00 | Мониторинг | Мониторинг запущен | Normal
2025-04-01 09:30:01 | СОТМ | Соединение установлено | Normal
2025-04-01 09:30:18 | НОВФР | 0 | Error
2025-04-01 09:32:42 | ТОК_АКБ | 1.25 (в норме) | Normal
// Другие события...
```

## 7. Дополнительные требования

### 7.1 Устойчивость к ошибкам
- Обработка ошибок соединения с СОТМ
- Обработка некорректных XML-ответов
- Восстановление после сбоев в работе СОТМ
- Сторожевой таймер для обнаружения и устранения зависаний рабочего потока
- Анализ и эвристическое обнаружение сбойной ТМИ по аномальным изменениям параметра СЕК

### 7.2 Потокобезопасность
- Использование мьютексов и атомарных переменных для безопасного доступа к данным из разных потоков
- Корректная синхронизация доступа к общим ресурсам

### 7.3 Производительность
- Эффективное использование ресурсов
- Минимальная задержка между обнаружением нарушения условия и оповещением
- Оптимизация отрисовки интерфейса для уменьшения нагрузки на CPU

### 7.4 Пользовательский интерфейс
- Современный и интуитивно понятный интерфейс
- Четкая индикация состояния параметров и системы
- Возможность настройки всех аспектов мониторинга через GUI
- Возможность работы с параметрами без остановки мониторинга
- Использование цветового кодирования для быстрого визуального восприятия статусов

### 7.5 Обновления
- Механизм централизованного обновления приложения
- Возможность указания сетевого пути к обновлениям
- Автоматическая проверка и установка обновлений
- Отображение текущей и доступной версии приложения

## 8. Критерии готовности
- Приложение успешно запускается в Astra Linux
- Стабильная работа в течение продолжительного времени
- Корректная обработка всех типов условий для параметров
- Возможность добавления, удаления и редактирования параметров на лету
- Корректное журналирование событий
- Эффективная система оповещений
- Обнаружение аномалий в телеметрии
- Функционирующая система обновлений

## 9. Ограничения
- Приложение должно работать под Astra Linux
- Приложение должно быть самодостаточным, без зависимостей от сторонних библиотек кроме Qt5
- Параметры должны храниться в легко читаемом текстовом формате (JSON с комментариями)
- Настройки должны храниться в легко читаемом текстовом формате (INI)
- Журнал должен храниться в легко читаемом текстовом формате
